aupop_2021 <- get_acs(geography = "tract",
variables = c("B01003_001E"),
year = 2021,
state = "TX",
county = c("Travis", "Williamson", "Caldwell", "Hays", "Bastrop"),
geometry = TRUE,
output = "wide") %>%
rename(pop_2021 = B01003_001E) %>%
dplyr::select(GEOID, NAME, pop_2021, geometry) %>%
st_transform(crs = 2278)
## grid arrange tract 2011 v 2021
grid.arrange(
ggplot() +
geom_sf(data = aupop_2011, aes(fill=factor(ntile(pop_2011,5))), colour=NA) +
scale_fill_manual(values = palette5,
labels=quintileBreaks(aupop_2011,"pop_2011"),
name="Quintile\nBreaks") +
labs(title="Population, New Jersey (by tract): 2011") +
mapTheme,
ggplot() +
geom_sf(data = aupop_2021, aes(fill=factor(ntile(pop_2021,5))), colour=NA) +
scale_fill_manual(values = palette5,
labels=quintileBreaks(aupop_2021,"pop_2021"),
name="Quintile\nBreaks") +
labs(title="Population, New Jersey (by tract): 2021") +
mapTheme, ncol=2)
# pulling data from census for 2011
aupop_2011 <- get_acs(geography = "tract",
variables = c("B01003_001E"),
year = 2011,
state = "TX",
county = c("Travis", "Williamson", "Caldwell", "Hays", "Bastrop"),
geometry = TRUE,
output = "wide")  %>%
rename(pop_2011 = B01003_001E) %>%
dplyr::select(GEOID, NAME, pop_2011, geometry) %>%
st_transform(crs = 2278)
# pulling data from census for 2021
aupop_2021 <- get_acs(geography = "tract",
variables = c("B01003_001E"),
year = 2021,
state = "TX",
county = c("Travis", "Williamson", "Caldwell", "Hays", "Bastrop"),
geometry = TRUE,
output = "wide") %>%
rename(pop_2021 = B01003_001E) %>%
dplyr::select(GEOID, NAME, pop_2021, geometry) %>%
st_transform(crs = 2278)
## grid arrange tract 2011 v 2021
grid.arrange(
ggplot() +
geom_sf(data = aupop_2011, aes(fill=factor(ntile(pop_2011,5))), colour=NA) +
scale_fill_manual(values = palette5,
labels=quintileBreaks(aupop_2011,"pop_2011"),
name="Quintile\nBreaks") +
labs(title="Population, New Jersey (by tract): 2011") +
mapTheme,
ggplot() +
geom_sf(data = aupop_2021, aes(fill=factor(ntile(pop_2021,5))), colour=NA) +
scale_fill_manual(values = palette5,
labels=quintileBreaks(aupop_2021,"pop_2021"),
name="Quintile\nBreaks") +
labs(title="Population, New Jersey (by tract): 2021") +
mapTheme, ncol=2)
auMSA_fishnet <-
auMSA_fishnet %>%
rownames_to_column("fishnetID") %>%
mutate(fishnetID = as.numeric(fishnetID)) %>%
dplyr::select(fishnetID)
fishnetPopulation11 <-
st_interpolate_aw(njpop_2011["pop_2011"], auMSA_fishnet, extensive=TRUE) %>%
as.data.frame(.) %>%
rownames_to_column(var = "fishnetID") %>%
left_join(auMSA_fishnet %>%
mutate(fishnetID = as.character(fishnetID)),
., by=c("fishnetID"='fishnetID')) %>%
mutate(pop_2011 = replace_na(pop_2011,0)) %>%
dplyr::select(pop_2011)
fishnetPopulation11 <-
st_interpolate_aw(aupop_2011["pop_2011"], auMSA_fishnet, extensive=TRUE) %>%
as.data.frame(.) %>%
rownames_to_column(var = "fishnetID") %>%
left_join(auMSA_fishnet %>%
mutate(fishnetID = as.character(fishnetID)),
., by=c("fishnetID"='fishnetID')) %>%
mutate(pop_2011 = replace_na(pop_2011,0)) %>%
dplyr::select(pop_2011)
fishnetPopulation21 <-
st_interpolate_aw(aupop_2021["pop_2021"],auMSA_fishnet, extensive=TRUE) %>%
as.data.frame(.) %>%
rownames_to_column(var = "fishnetID") %>%
left_join(auMSA_fishnet %>%
mutate(fishnetID = as.character(fishnetID)),
., by=c("fishnetID"='fishnetID')) %>%
mutate(pop_2021 = replace_na(pop_2021,0)) %>%
dplyr::select(pop_2021)
fishnetPopulation <-
cbind(fishnetPopulation11,fishnetPopulation21) %>%
dplyr::select(pop_2011,pop_2021) %>%
mutate(pop_Change = pop_2021 - pop_2011)
grid.arrange(
ggplot() +
geom_sf(data=aupop_2021, aes(fill=factor(ntile(pop_2021,5))),colour=NA) +
scale_fill_manual(values = palette5,
labels=substr(quintileBreaks(aupop_2021,"pop_2021"),1,4),
name="Quintile\nBreaks") +
labs(title="Population, NJ MSA: 2021",
subtitle="Represented as tracts; Boundaries omitted") +
mapTheme,
ggplot() +
geom_sf(data=fishnetPopulation, aes(fill=factor(ntile(pop_2021,5))),colour=NA) +
scale_fill_manual(values = palette5,
labels=substr(quintileBreaks(fishnetPopulation,"pop_2021"),1,4),
name="Quintile\nBreaks") +
labs(title="Population, NJ MSA: 2021",
subtitle="Represented as fishnet gridcells; Boundaries omitted") +
mapTheme, ncol=2)
auHighways <-
st_read("/Users/luyiiwong/Documents/GitHub/LandUseModeling_HW5/AustinData/AustinHighways_v2geojson.json") %>%
st_transform(st_crs(auMSA)) %>%
st_intersection(auMSA)
ggplot() +
geom_point(data=fishnet,
aes(x=xyC(fishnet)[,1], y=xyC(fishnet)[,2],colour=lc_change),size=1.5) +
geom_sf(data=auHighways) +
scale_colour_manual(values = palette2,
labels=c("No Change","New Development")) +
labs(title = "New Development and Highways",
subtitle = "As fishnet centroids") +
mapTheme
emptyRaster <- lc_change
emptyRaster[] <- NA
auHighways_spdf <- as(auHighways, "Spatial")
st_crs(auHighways)
auHighways_spdf <- as(auHighways, "Spatial")
auHighways <-
st_read("/Users/luyiiwong/Documents/GitHub/LandUseModeling_HW5/AustinData/AustinHighways_v3.geojson") %>%
st_transform(st_crs(auMSA)) %>%
st_intersection(auMSA)
ggplot() +
geom_point(data=fishnet,
aes(x=xyC(fishnet)[,1], y=xyC(fishnet)[,2],colour=lc_change),size=1.5) +
geom_sf(data=auHighways) +
scale_colour_manual(values = palette2,
labels=c("No Change","New Development")) +
labs(title = "New Development and Highways",
subtitle = "As fishnet centroids") +
mapTheme
auHighways_spdf <- as(auHighways, "Spatial")
auMSA <- st_read("/Users/luyiiwong/Documents/GitHub/LandUseModeling_HW5/AustinData/AustinMSA_v3.geojson")
ggplot() +
geom_sf(data=auMSA) +
geom_raster(data=rast(development_change) %>% na.omit,
aes(x,y,fill=as.factor(value))) +
scale_fill_viridis(discrete=TRUE, name ="Land Cover\nChange") +
labs(title="Development land use change") +
mapTheme
ggplot() +
geom_sf(data=auMSA) +
geom_raster(data=rast(lc_change2) %>% na.omit,
aes(x,y,fill=as.factor(value))) +
scale_fill_viridis(discrete=TRUE, name ="Land Cover\nChange") +
labs(title="Development Land Use Change") +
mapTheme
auMSA_fishnet <-
st_make_grid(auMSA, 2000) %>%
st_sf()
auMSA_fishnet <-
auMSA_fishnet[auMSA,]
ggplot() +
geom_sf(data=auMSA_fishnet) +
labs(title="Fishnet, 2000 Foot Resolution") +
mapTheme
#original version
changePoints <-
rasterToPoints(lc_change2) %>%
as.data.frame() %>%
st_as_sf(coords = c("x", "y"), crs = st_crs(auMSA_fishnet))
fishnet <-
aggregate(changePoints, auMSA_fishnet, sum) %>%
mutate(lc_change = ifelse(is.na(lc_change),0,1),
lc_change = as.factor(lc_change))
ggplot() +
geom_sf(data=auMSA) +
geom_point(data=fishnet,
aes(x=xyC(fishnet)$x, y=xyC(fishnet)$y, colour=lc_change)) +
scale_colour_manual(values = palette2,
labels=c("No Change","New Development"),
name = "") +
labs(title = "Land Cover Development Change", subtitle = "As fishnet centroids") +
mapTheme
ggplot() +
geom_sf(data=auMSA) +
geom_raster(data=rast(lc_2011) %>% na.omit %>% filter(value > 0),
aes(x,y,fill=as.factor(value))) +
scale_fill_viridis(discrete=TRUE, name ="") +
labs(title = "Land Cover, 2011") +
mapTheme +
theme(legend.direction="horizontal")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyverse)
library(sf)
library(raster)
library(knitr)
library(kableExtra)
library(tidycensus)
library(tigris)
library(FNN)
#library(QuantPsyc) # JE Note: in R 4.1, QuantPsyc package not available.
library(caret)
library(yardstick)
library(pscl)
library(plotROC)
library(ggrepel)
library(pROC)
library(grid)
library(gridExtra)
library(viridis)
library(igraph)
plotTheme <- theme(
plot.title =element_text(size=12),
plot.subtitle = element_text(size=8),
plot.caption = element_text(size = 6),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 10),
# Set the entire chart region to blank
panel.background=element_blank(),
plot.background=element_blank(),
#panel.border=element_rect(colour="#F0F0F0"),
# Format the grid
panel.grid.major=element_line(colour="#D0D0D0",size=.75),
axis.ticks=element_blank())
mapTheme <- theme(plot.title =element_text(size=12),
plot.subtitle = element_text(size=8),
plot.caption = element_text(size = 6),
axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_line(colour = 'transparent'),
panel.grid.minor=element_blank(),
legend.direction = "vertical",
legend.position = "right",
plot.margin = margin(1, 1, 1, 1, 'cm'),
legend.key.height = unit(1, "cm"), legend.key.width = unit(0.2, "cm"))
palette2 <- c("#41b6c4","#253494")
palette4 <- c("#a1dab4","#41b6c4","#2c7fb8","#253494")
palette5 <- c("#ffffcc","#a1dab4","#41b6c4","#2c7fb8","#253494")
palette10 <- c("#f7fcf0","#e0f3db","#ccebc5","#a8ddb5","#7bccc4",
"#4eb3d3","#2b8cbe","#0868ac","#084081","#f7fcf0")
#this function converts a column in to quintiles. It is used for mapping.
quintileBreaks <- function(df,variable) {
as.character(quantile(df[[variable]],
c(.01,.2,.4,.6,.8),na.rm=T))
}
#This function can be used to convert a polygon sf to centroids xy coords.
xyC <- function(aPolygonSF) {
as.data.frame(
cbind(x=st_coordinates(st_centroid(aPolygonSF))[,1],
y=st_coordinates(st_centroid(aPolygonSF))[,2]))
}
#this function convert a raster to a data frame so it can be plotted in ggplot
rast <- function(inRaster) {
data.frame(
xyFromCell(inRaster, 1:ncell(inRaster)),
value = getValues(inRaster)) }
auMSA <- st_read("/Users/luyiiwong/Documents/GitHub/LandUseModeling_HW5/AustinData/AustinMSA_v3.geojson")
lc_2011 = raster("/Users/luyiiwong/Documents/GitHub/LandUseModeling_HW5/AustinData/AU_lc_2011_Resample_v2.tif")
lc_2021 = raster("/Users/luyiiwong/Documents/GitHub/LandUseModeling_HW5/AustinData/AU_lc_2021_Resample_v2.tif")
lc_change <- lc_2011+lc_2021
reclassMatrix <-
matrix(c(
0,12,0,
12,24,1,
24,Inf,0),
ncol=3, byrow=T)
developed_2011 <-
reclassify(lc_2011,reclassMatrix)
developed_2021 <-
reclassify(lc_2021,reclassMatrix)
development_change <- developed_2011+developed_2021
hist(development_change)
development_change[development_change != 1] <- NA
ggplot() +
geom_sf(data=auMSA) +
geom_raster(data=rast(development_change) %>% na.omit,
aes(x,y,fill=as.factor(value))) +
scale_fill_viridis(discrete=TRUE, name ="Land Cover\nChange") +
labs(title="Development land use change") +
mapTheme
lc_change2 <-
reclassify(lc_change,reclassMatrix)
lc_change2[lc_change2 < 1] <- NA
names(lc_change2) <- "lc_change"
ggplot() +
geom_sf(data=auMSA) +
geom_raster(data=rast(lc_change2) %>% na.omit,
aes(x,y,fill=as.factor(value))) +
scale_fill_viridis(discrete=TRUE, name ="Land Cover\nChange") +
labs(title="Development Land Use Change") +
mapTheme
auMSA_fishnet <-
st_make_grid(auMSA, 2000) %>%
st_sf()
auMSA_fishnet <-
auMSA_fishnet[auMSA,]
ggplot() +
geom_sf(data=auMSA_fishnet) +
labs(title="Fishnet, 2000 Foot Resolution") +
mapTheme
#original version
changePoints <-
rasterToPoints(lc_change2) %>%
as.data.frame() %>%
st_as_sf(coords = c("x", "y"), crs = st_crs(auMSA_fishnet))
fishnet <-
aggregate(changePoints, auMSA_fishnet, sum) %>%
mutate(lc_change = ifelse(is.na(lc_change),0,1),
lc_change = as.factor(lc_change))
ggplot() +
geom_sf(data=auMSA) +
geom_point(data=fishnet,
aes(x=xyC(fishnet)$x, y=xyC(fishnet)$y, colour=lc_change)) +
scale_colour_manual(values = palette2,
labels=c("No Change","New Development"),
name = "") +
labs(title = "Land Cover Development Change", subtitle = "As fishnet centroids") +
mapTheme
ggplot() +
geom_sf(data=auMSA) +
geom_raster(data=rast(lc_2011) %>% na.omit %>% filter(value > 0),
aes(x,y,fill=as.factor(value))) +
scale_fill_viridis(discrete=TRUE, name ="") +
labs(title = "Land Cover, 2011") +
mapTheme +
theme(legend.direction="horizontal")
developed <- lc_2011 == 21 | lc_2011 == 22 | lc_2011 == 23 | lc_2011 == 24
forest <- lc_2011 == 41 | lc_2011 == 42 | lc_2011 == 43
farm <- lc_2011 == 81 | lc_2011 == 82
wetlands <- lc_2011 == 90 | lc_2011 == 95
otherUndeveloped <- lc_2011 == 52 | lc_2011 == 71 | lc_2011 == 31
water <- lc_2011 == 11
names(developed) <- "developed"
names(forest) <- "forest"
names(farm) <- "farm"
names(wetlands) <- "wetlands"
names(otherUndeveloped) <- "otherUndeveloped"
names(water) <- "water"
aggregateRaster <- function(inputRasterList, theFishnet) {
#create an empty fishnet with the same dimensions as the input fishnet
theseFishnets <- theFishnet %>% dplyr::select()
#for each raster in the raster list
for (i in inputRasterList) {
#create a variable name corresponding to the ith raster
varName <- names(i)
#convert raster to points as an sf
thesePoints <-
rasterToPoints(i) %>%
as.data.frame() %>%
st_as_sf(coords = c("x", "y"), crs = st_crs(theFishnet)) %>%
filter(.[[1]] == 1)
#aggregate to the fishnet
thisFishnet <-
aggregate(thesePoints, theFishnet, length) %>%
mutate(!!varName := ifelse(is.na(.[[1]]),0,1))
#add to the larger fishnet
theseFishnets <- cbind(theseFishnets,thisFishnet)
}
#output all aggregates as one large fishnet
return(theseFishnets)
}
theRasterList <- c(developed,forest,farm,wetlands,otherUndeveloped,water)
aggregatedRasters <-
aggregateRaster(theRasterList, auMSA_fishnet) %>%
dplyr::select(developed,forest,farm,wetlands,otherUndeveloped,water) %>%
mutate_if(is.numeric,as.factor)
aggregatedRasters %>%
gather(var,value,developed:water) %>%
st_cast("POLYGON") %>%    #just to make sure no weird geometries slipped in
mutate(X = xyC(.)$x,
Y = xyC(.)$y) %>%
ggplot() +
geom_sf(data=auMSA) +
geom_point(aes(X,Y, colour=as.factor(value))) +
facet_wrap(~var) +
scale_colour_manual(values = palette2,
labels=c("Other","Land Cover"),
name = "") +
labs(title = "Land Cover Types, 2011",
subtitle = "As fishnet centroids") +
mapTheme
# setting up api key
census_api_key("b83a23afee4a8ed0fa131e449869e6577b87151e", overwrite = TRUE, install = TRUE)
# pulling data from census for 2011
aupop_2011 <- get_acs(geography = "tract",
variables = c("B01003_001E"),
year = 2011,
state = "TX",
county = c("Travis", "Williamson", "Caldwell", "Hays", "Bastrop"),
geometry = TRUE,
output = "wide")  %>%
rename(pop_2011 = B01003_001E) %>%
dplyr::select(GEOID, NAME, pop_2011, geometry) %>%
st_transform(crs = 2278)
# pulling data from census for 2021
aupop_2021 <- get_acs(geography = "tract",
variables = c("B01003_001E"),
year = 2021,
state = "TX",
county = c("Travis", "Williamson", "Caldwell", "Hays", "Bastrop"),
geometry = TRUE,
output = "wide") %>%
rename(pop_2021 = B01003_001E) %>%
dplyr::select(GEOID, NAME, pop_2021, geometry) %>%
st_transform(crs = 2278)
## grid arrange tract 2011 v 2021
grid.arrange(
ggplot() +
geom_sf(data = aupop_2011, aes(fill=factor(ntile(pop_2011,5))), colour=NA) +
scale_fill_manual(values = palette5,
labels=quintileBreaks(aupop_2011,"pop_2011"),
name="Quintile\nBreaks") +
labs(title="Population, New Jersey (by tract): 2011") +
mapTheme,
ggplot() +
geom_sf(data = aupop_2021, aes(fill=factor(ntile(pop_2021,5))), colour=NA) +
scale_fill_manual(values = palette5,
labels=quintileBreaks(aupop_2021,"pop_2021"),
name="Quintile\nBreaks") +
labs(title="Population, New Jersey (by tract): 2021") +
mapTheme, ncol=2)
auMSA_fishnet <-
auMSA_fishnet %>%
rownames_to_column("fishnetID") %>%
mutate(fishnetID = as.numeric(fishnetID)) %>%
dplyr::select(fishnetID)
fishnetPopulation11 <-
st_interpolate_aw(aupop_2011["pop_2011"], auMSA_fishnet, extensive=TRUE) %>%
as.data.frame(.) %>%
rownames_to_column(var = "fishnetID") %>%
left_join(auMSA_fishnet %>%
mutate(fishnetID = as.character(fishnetID)),
., by=c("fishnetID"='fishnetID')) %>%
mutate(pop_2011 = replace_na(pop_2011,0)) %>%
dplyr::select(pop_2011)
fishnetPopulation21 <-
st_interpolate_aw(aupop_2021["pop_2021"],auMSA_fishnet, extensive=TRUE) %>%
as.data.frame(.) %>%
rownames_to_column(var = "fishnetID") %>%
left_join(auMSA_fishnet %>%
mutate(fishnetID = as.character(fishnetID)),
., by=c("fishnetID"='fishnetID')) %>%
mutate(pop_2021 = replace_na(pop_2021,0)) %>%
dplyr::select(pop_2021)
fishnetPopulation <-
cbind(fishnetPopulation11,fishnetPopulation21) %>%
dplyr::select(pop_2011,pop_2021) %>%
mutate(pop_Change = pop_2021 - pop_2011)
grid.arrange(
ggplot() +
geom_sf(data=aupop_2021, aes(fill=factor(ntile(pop_2021,5))),colour=NA) +
scale_fill_manual(values = palette5,
labels=substr(quintileBreaks(aupop_2021,"pop_2021"),1,4),
name="Quintile\nBreaks") +
labs(title="Population, NJ MSA: 2021",
subtitle="Represented as tracts; Boundaries omitted") +
mapTheme,
ggplot() +
geom_sf(data=fishnetPopulation, aes(fill=factor(ntile(pop_2021,5))),colour=NA) +
scale_fill_manual(values = palette5,
labels=substr(quintileBreaks(fishnetPopulation,"pop_2021"),1,4),
name="Quintile\nBreaks") +
labs(title="Population, NJ MSA: 2021",
subtitle="Represented as fishnet gridcells; Boundaries omitted") +
mapTheme, ncol=2)
#auHighways <-
#  st_read("C:/Users/ferna/OneDrive/Documents/ArcGIS/Projects/CPLN 6750/HW5/dv_roads.geojson") %>%
#  st_transform(st_crs(auMSA)) %>%
#  st_intersection(auMSA)
auHighways <-
st_read("/Users/luyiiwong/Documents/GitHub/LandUseModeling_HW5/AustinData/AustinHighways_v3.geojson") %>%
st_transform(st_crs(auMSA)) %>%
st_intersection(auMSA)
ggplot() +
geom_point(data=fishnet,
aes(x=xyC(fishnet)[,1], y=xyC(fishnet)[,2],colour=lc_change),size=1.5) +
geom_sf(data=auHighways) +
scale_colour_manual(values = palette2,
labels=c("No Change","New Development")) +
labs(title = "New Development and Highways",
subtitle = "As fishnet centroids") +
mapTheme
emptyRaster <- lc_change
emptyRaster[] <- NA
# auHighways_spdf <- as(st_as_sf(auHighways), "SpatialPolygonsDataFrame")
auHighways_spdf <- as(auHighways, "Spatial")
auHighways_spdf <- as(st_as_sf(auHighways), "SpatialPolygonsDataFrame")
auHighways <-
st_read("/Users/luyiiwong/Documents/GitHub/LandUseModeling_HW5/AustinData/AustinHighways_v4.geojson") %>%
st_transform(st_crs(auMSA)) %>%
st_intersection(auMSA)
auHighways_spdf <- as(auHighways, "Spatial")
auHighways = raster("/Users/luyiiwong/Documents/GitHub/LandUseModeling_HW5/AustinData/AustinHighways_raster.tif")
highway_raster_distance <- distance(highway_raster)
highway_raster <- rasterize(auHighways, emptyRaster)
highway_raster <- auHighways
highway_raster_distance <- distance(highway_raster)
